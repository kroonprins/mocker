* allow latency also at global project level
* make it possible to make response in a rule conditional (=> avoid having to put the condition in several fields (e.g. statusCode and body are different depending some condition))
* file download/upload mocking?
* investigate pouchdb as alternative to nedb (because last commit for nedb more than 2 years ago). Related to it: investigate if none of the bigger odm frameworks (e.g. mongoose / waterline) support an embedded db.
* make path and method in request of a rule arrays?
* serializr also has callback functions => check if promisify
* maybe add watch on yaml files to refresh project memory model when file system changes
* make clustering of mock server possible
* some pretty horrifying object cloning going on => investigate immutable structures (at first sight not straightforward with classes)
* check out chai-as-promised (mainly to see if we can't improve the tests where we check on an expected exception to be thrown for async function (see https://github.com/chaijs/chai/issues/415))
* jsdoc
* openapi (swagger-jsdoc?)
* fix naming inconsistency . or - (e.g. learing-mode.model vs project-model)
(* add ui testing also to git commit hook)
* make possible that header/cookie is conditional in response
* split api server
* add class validation on learning mode model
* add sorting options on api
* unit test timeout on windows + npm test not running on windows + ln not possible on windows for npm install
* use guard to disable routing to rules/learning mode if no project selected?
* try reactive forms
* problem body parsing in reverse proxy on windows
* store the templating helpers in a db + allow them to be entered in the ui
* make possible that mock server logs traffic in a db
* try alternatives for monaco code editor (ace/codemirror)
* improve reverse proxy unit tests (e.g. didn't catch that output headers weren't saved with a previous bug)
* componentize much more in ui
* handle xml input body on mock server => either use body-parser-xml (but xml to json is always tricky with arrays) or have the text bodyparser handle the "*/xml" content type and add an xpath template helper function
* put this todo list as github todos in github project
* add ability to mock server to proxy requests to the real server if no rule defined
* make http method '*' possible? and list of http methods?
* when updating project name it should update all recorded requests..., when removing project all associated recorded requests can be removed
* possible issue on windows when renaming file that only updated casing?
* possible issue that response cookies get recorded as headers in reverse proxy learning mode?
* allow running in https
* templating type 'none': replace by absent type?
* remove .eslinteginore once possible
* bin section of package.json not working on windows because it requires shebang to be #!/usr/bin/env node (which doesn't work because --experimental-modules flag must be set)
* improve ProjectChangeWatcher to reinitialize when the project files changes (in case the watch list must be updated)
* put hierarchy in lib folder
* to check: npm install fails if angular cli not installed globally?
* add more testing on file watching + improve code around restarting logic
* investigate yaml autocomplete
* generate swagger for mock server
* create mock server rules from a swagger definition
* add optional dependency app-config to simplify what needs to be set up in unit tests. In general review dependencies because there is too much unnecessary things to set up in unit tests. Or check if the can be some kind of "mock"-mode.
* make possible to activate project watch from ui?
* upgrade dependencies
* examples to add:
    * echo
    * path parameter used in response
* add unit test for swagger ui handling in mock server
* make mock server integration in unit tests (with wrapper to verify that it has been called)
* split into separate libraries
* make version of mock server in go
* make version of learning mode with immediate save to rule
